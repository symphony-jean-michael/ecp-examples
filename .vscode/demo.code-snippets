{
  // Symphony FDC3 Code Snippets
	// Place your ecp-examples workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.

  "ChatRoom": {
    "scope": "javascript,typescript,typescriptreact",
    "prefix": "symfdc3.chatroom",
    "body": [
      "{",
      "  type: 'fdc3.chat.room',",
      "  providerName: 'Symphony',",
      "  id: {",
      "    streamIds: [",
      "      $1",
      "    ]",
      "  }",
      "};",
      "$0"
    ],
    "description": "ChatRoom Context"
  },
  "ChatMessage": {
    "scope": "javascript,typescript,typescriptreact",
    "prefix": "symfdc3.chatmessage",
    "body": [
      "{",
      "  type: 'fdc3.chat.message',",
      "  chatRoom: ${1:room},",
      "  message: {",
      "    type: 'fdc3.message',",
      "    text: {",
      "      'text/markdown': ${2:message}",
      "    },",
      "    entities: ${3:entities},",
      "  }",
      "};",
      "$0"
    ],
    "description": "ChatMessage FDC3 context"
  },
  "ViewChart": {
    "scope": "javascript,typescript,typescriptreact",
    "prefix": "symfdc3.viewchart",
    "body": [
      "{",
      "  title: 'View chart',",
      "  intent: 'ViewChart',",
      "  context: {",
      "    type: 'fdc3.chart',",
      "    instruments: [",
      "      {",
      "        type: 'fdc3.instrument',",
      "        id: {",
      "          ticker: ${1:ticker}",
      "        }",
      "      }",
      "    ],",
      "    style: 'mountain'",
      "  }",
      "}$0",
    ],
    "description": "ViewChart FDC3 context"
  },
  
  "DemoButton": {
    "scope": "javascript,typescript,typescriptreact",
    "prefix": "demo.button",
    "body": [
      "<Button onClick={() => {",
      "",
      "/* Step 1: Create Room context (Id: details.roomId)*/",
      "$1",
      "",
      "/* Step 2: Create Message context */",
      "$2",
      "",
      "/* Step 3: Raise 'SendChatMessage' intent */",
      "$3",
      "$0",
      "}}>Send Chat Message</Button>"
    ],
    "description": "Demo: Add a button"
  },

  "DemoMarkdown1": {
    "scope": "javascript,typescript,typescriptreact",
    "prefix": "demo.markdown.1",
    "body": [
      "'Hey guys ! What do you think about **the new value** ?'$0",
    ],
    "description": "Demo: Markdown message"
  },

  "DemoMarkdown2": {
    "scope": "javascript,typescript,typescriptreact",
    "prefix": "demo.markdown.2",
    "body": [
      "'Hey guys ! What do you think about **the new value** ? \\n\\n ยง[Open Chart](id/button1)'$0",
    ],
    "description": "Demo: Markdown message with entities"
  },

  "DemoEntities": {
    "scope": "javascript,typescript,typescriptreact",
    "prefix": "demo.entities",
    "body": [
      "{",
      "  button1: {",
      "    type: 'fdc3.fdc3Intent',",
      "    data: ${1:intent}",
      "  }",
      "}"
    ],
    "description": "Demo: Markdown message with entities"
  },
}